global:
  enabled: true
  namespace: "my-vault-demo"
  tlsDisable: false
  imagePullSecrets: []

server:
  enabled: true
  enterpriseLicense:
    secretName: "vault-secrets"
    secretKey: "license"

  image:
    repository: "hashicorp/vault-enterprise"
    tag: "latest"
    pullPolicy: IfNotPresent
  
  updateStrategyType: "OnDelete"

  logLevel: "debug"

  logFormat: "json"

  resources: {}

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    activeService: true
    ingressClassName: nginx
  
  authDelegator:
    enabled: true
  
  readinessProbe:
    port: 8200
    failureThreshold: 2
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 5
  
  extraEnvironmentVars:
    VAULT_CACERT: /vault/tls/ca.crt

  extraSecretEnvironmentVars:
    - envName: AWS_ACCESS_KEY_ID
      secretName: vault-secrets
      secretKey: AWS_ACCESS_KEY_ID
    - envName: AWS_SECRET_ACCESS_KEY
      secretName: vault-secrets
      secretKey: AWS_SECRET_ACCESS_KEY
    - envName: AWS_SESSION_TOKEN
      secretName: vault-secrets
      secretKey: AWS_SESSION_TOKEN
  
  volumes:
    - name: vault-tls
      secret:
        secretName: vault-secrets
        items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt

  volumeMounts:
    - name: vault-tls
      mountPath: /vault/tls
      readOnly: true

  affinity: ""
  
  dataStorage:
    enabled: true
    size: 2Gi
    mountPath: "/vault/data"
    storageClass: null
    accessMode: ReadWriteOnce
    annotations: {}
    labels: {}
  
  auditStorage:
    enabled: true
    size: 2Gi
    mountPath: "/vault/audit"
    storageClass: null
    accessMode: ReadWriteOnce
    annotations: {}
    labels: {}

  ha:
    enabled: true
    replicas: 3

    raft:
      enabled: true
      setNodeId: true
      
      config: |
        ui = true

        storage "raft" {
          path = "/vault/data"
        }
        
        listener "tcp" {
          tls_disable = false
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/tls/tls.crt"
          tls_key_file = "/vault/tls/tls.key"
          tls_client_ca_file = "/vault/tls/ca.crt"
        }
        telemetry {
            prometheus_retention_time = "4h"
            disable_hostname = true
          }

        service_registration "kubernetes" {}

  serviceAccount:
    create: true
    name: ""
    createSecret: false
    annotations: {}
    extraLabels: {}
    serviceDiscovery:
      enabled: true